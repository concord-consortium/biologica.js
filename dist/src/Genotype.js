// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty;

  Array.prototype.remove = function(from, to) {
    var rest;
    rest = this.slice((to || from) + 1 || this.length);
    this.length = from < 0 ? this.length + from : from;
    return this.push.apply(this, rest);
  };

  Array.prototype.removeObj = function(obj) {
    var i;
    i = this.indexOf(obj);
    if (~i) {
      this.remove(i);
      return true;
    } else {
      return false;
    }
  };

  BioLogica.Genotype = (function() {

    function Genotype(sex, genotypeHash) {
      var alleles, chromosome, side, sides, _ref;
      if (sex === BioLogica.MALE) {
        if ((_ref = genotypeHash.XY) != null) {
          _ref.b = [];
        }
      }
      this.chromosomes = {};
      this.allAlleles = [];
      for (chromosome in genotypeHash) {
        if (!__hasProp.call(genotypeHash, chromosome)) continue;
        sides = genotypeHash[chromosome];
        this.chromosomes[chromosome] = {};
        for (side in sides) {
          if (!__hasProp.call(sides, side)) continue;
          alleles = sides[side];
          this.chromosomes[chromosome][side] = alleles.slice(0);
          this.allAlleles = this.allAlleles.concat(alleles.slice(0));
        }
      }
    }

    Genotype.prototype.containsAlleles = function(alleles) {
      var allAllelesCopy, allele, _i, _len;
      allAllelesCopy = this.allAlleles.slice(0);
      for (_i = 0, _len = alleles.length; _i < _len; _i++) {
        allele = alleles[_i];
        if (!allAllelesCopy.removeObj(allele)) {
          return false;
        }
      }
      return true;
    };

    return Genotype;

  })();

}).call(this);
